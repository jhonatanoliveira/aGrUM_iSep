COMPILER prm_run;
//=====================
CHARACTERS
  letter = 'A'..'Z' + 'a'..'z'+ '_'.
  digit  = '0'..'9'.
  eol    = '\n'.
  dot    = '.'.

//=====================
TOKENS
  integer     = ['+'|'-'] digit {digit}.
  float       = ['+'|'-'] digit {digit} '.' digit {digit} [ ('E'|'e') ['+'|'-'] digit {digit} ].
  word        = letter {(letter | digit | dot)}.
  eol         = '\n'.
  package     = "package".
  import      = "import".
  request     = "request".
  query       = '?'.
  unobserve   = "unobserve".
  engine      = "engine".
  grd_engine  = "grd_engine".

//=====================
COMMENTS FROM "/*" TO "*/" NESTED
COMMENTS FROM "//" TO eol

IGNORE '\r' + eol + '\t' + ' '

//=====================
PRODUCTIONS

//=====================
prm_run = (. this->inf = 0; .)
          [ package word (. this->package = gum::narrow(t->val); .) ';' ]
          import word (. this->import(gum::narrow(t->val)); .) ';'
          RequestBloc
          .

RequestBloc = request word
              '{' {
                    ( Observe |
                      Unobserve |
                      Query |
                      SetEngine |
                      SetGrdEngine )
              } '}'
              (. if (inf) { delete inf; } .)
              .
//=====================
Observe =          (. std::string left_value, right_value; .)
          word     (. left_value = gum::narrow(t->val); .)
          '=' word (. right_value = gum::narrow(t->val); .)
          ';'      (. this->addObservation(left_value, right_value); .)
          .

//=====================
Unobserve = unobserve word (. this->removeObervation(gum::narrow(t->val)); .)
            ';'
            .

//=====================
Query = '?' word (. this->query(gum::narrow(t->val)); .) ';'
        .

//=====================
SetEngine = engine word (. this->engine = gum::narrow(t->val); .) ';'.

//=====================
SetGrdEngine = grd_engine word (. this->bn_engine = gum::narrow(t->val); .) ';'.

END prm_run.

