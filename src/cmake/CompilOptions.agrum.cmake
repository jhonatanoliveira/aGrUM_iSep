option(BUILD_SHARED_LIBS "shared|static libs" ON)

set(AGRUM_OPTIMIZATION "-O3")

set(AGRUM_INLINING_POLICY "")#"-fno-inline-small-functions")

add_definitions("-Wall")
add_definitions("-pedantic")

find_package (CXX11)
if (CXX11_FOUND)
  set (AGRUM_CXX_FLAGS "${CXX11_FLAGS} ${AGRUM_CXX_FLAGS}" )
else ()
  message(FATAL_ERROR "aGrUM is now using C++11. Please find a compiler (for instance GCC) C++11 compliant")
endif ()

if(MINGW)
  set(WIN32_STYLE_FLAGS 0)
  set(UNIX_STYLE_FLAGS  1)
endif(MINGW)
if(UNIX)
  set(WIN32_STYLE_FLAGS 0)
  set(UNIX_STYLE_FLAGS  1)
endif(UNIX)

if("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "x86_64")
	set(AGRUM_PROCESSOR "64")
else("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "x86_64")
	set(AGRUM_PROCESSOR "32")
endif("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "x86_64")

set(AGRUM_VERSION "${AGRUM_VERSION_MAJOR}.${AGRUM_VERSION_MINOR}.${AGRUM_VERSION_PATCH}")

set(CMAKE_CXX_FLAGS_DEBUG " -O0 -pg -g -DGUM_NO_INLINE")
set(CMAKE_C_FLAGS_DEBUG "-O0 -pg -g -DGUM_NO_INLINE")

set(CMAKE_CXX_FLAGS_RELEASE "${AGRUM_OPTIMIZATION} -DNDEBUG ${AGRUM_INLINING_POLICY}")
set(CMAKE_C_FLAGS_RELEASE "${AGRUM_OPTIMIZATION} -DNDEBUG ${AGRUM_INLINING_POLICY}")

if ("${CMAKE_BUILD_TYPE}" STREQUAL "DEBUG")
  set(LIBAGRUM "agrum-dbg")
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -pg")
  set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -pg")
  set(CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} -pg")
else ()
  set(LIBAGRUM "agrum")
endif ()

if(WIN32)
  set(LIBRARY_OUTPUT_PATH ${AGRUM_BINARY_DIR})
endif(WIN32)
if(UNIX)
  set(LIBRARY_OUTPUT_PATH ${AGRUM_BINARY_DIR}/lib)
endif(UNIX)

if ("${CMAKE_VERBOSE_MAKEFILE}" STREQUAL "ON")
#trace is ON in DEBUG mode
  if ("${CMAKE_BUILD_TYPE}" STREQUAL "RELEASE")
    set(GUM_TRACE_ON TRUE)
  endif ("${CMAKE_BUILD_TYPE}" STREQUAL "RELEASE")
endif ("${CMAKE_VERBOSE_MAKEFILE}" STREQUAL "ON")

set(CMAKE_CXX_FLAGS "${AGRUM_CXX_FLAGS} ${CMAKE_CXX_FLAGS}")

